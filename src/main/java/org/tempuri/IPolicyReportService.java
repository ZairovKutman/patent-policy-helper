
package org.tempuri;

import eu.x_road.xsd.identifiers.XRoadClientIdentifierType;
import eu.x_road.xsd.identifiers.XRoadServiceIdentifierType;
import fi.x_road.tunduk_sf.producer.*;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "IPolicyReportService", targetNamespace = "http://tempuri.org/")
@XmlSeeAlso({
    eu.x_road.xsd.identifiers.ObjectFactory.class,
    eu.x_road.xsd.xroad.ObjectFactory.class,
    fi.x_road.tunduk_sf.producer.ObjectFactory.class
})
public interface IPolicyReportService {


    /**
     * 
     * @param requestOrg
     * @param issue
     * @param policies
     * @param error
     * @param userId
     * @param issuer
     * @param requestPerson
     * @param xml
     * @param service
     * @param client
     * @param protocolVersion
     * @param state
     * @param id
     */
    @WebMethod(operationName = "MakePolicy", action = "http://tempuri.org/IPolicyReportService/MakePolicy")
    @RequestWrapper(localName = "MakePolicy", targetNamespace = "http://tunduk-sf.x-road.fi/producer", className = "fi.x_road.tunduk_sf.producer.MakePolicyRequest")
    @ResponseWrapper(localName = "MakePolicyResponse", targetNamespace = "http://tunduk-sf.x-road.fi/producer", className = "fi.x_road.tunduk_sf.producer.MakePolicyResponse")
    public void makePolicy(
        @WebParam(name = "XML", targetNamespace = "http://tunduk-sf.x-road.fi/producer")
        byte[] xml,
        @WebParam(name = "RequestOrg", targetNamespace = "http://tunduk-sf.x-road.fi/producer")
        String requestOrg,
        @WebParam(name = "RequestPerson", targetNamespace = "http://tunduk-sf.x-road.fi/producer")
        String requestPerson,
        @WebParam(name = "State", targetNamespace = "http://tunduk-sf.x-road.fi/producer", mode = WebParam.Mode.OUT)
        Holder<UploadState> state,
        @WebParam(name = "Error", targetNamespace = "http://tunduk-sf.x-road.fi/producer", mode = WebParam.Mode.OUT)
        Holder<String> error,
        @WebParam(name = "Issuer", targetNamespace = "http://tunduk-sf.x-road.fi/producer", mode = WebParam.Mode.OUT)
        Holder<String> issuer,
        @WebParam(name = "Policies", targetNamespace = "http://tunduk-sf.x-road.fi/producer", mode = WebParam.Mode.OUT)
        Holder<ArrayOfPolicyInfo> policies,
        @WebParam(name = "client", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "client")
        Holder<XRoadClientIdentifierType> client,
        @WebParam(name = "id", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "id")
        Holder<String> id,
        @WebParam(name = "issue", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "issue")
        Holder<String> issue,
        @WebParam(name = "protocolVersion", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "protocolVersion")
        Holder<String> protocolVersion,
        @WebParam(name = "service", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "service")
        Holder<XRoadServiceIdentifierType> service,
        @WebParam(name = "userId", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "userId")
        Holder<String> userId);

    /**
     * 
     * @param requestOrg
     * @param issue
     * @param policies
     * @param error
     * @param userId
     * @param issuer
     * @param requestPerson
     * @param service
     * @param canceledPolicies
     * @param client
     * @param protocolVersion
     * @param state
     * @param id
     */
    @WebMethod(operationName = "CancelPolicy", action = "http://tempuri.org/IPolicyReportService/CancelPolicy")
    @RequestWrapper(localName = "CancelPolicy", targetNamespace = "http://tunduk-sf.x-road.fi/producer", className = "fi.x_road.tunduk_sf.producer.CancelPolicyRequest")
    @ResponseWrapper(localName = "CancelPolicyResponse", targetNamespace = "http://tunduk-sf.x-road.fi/producer", className = "fi.x_road.tunduk_sf.producer.CancelPolicyResponse")
    public void cancelPolicy(
        @WebParam(name = "CanceledPolicies", targetNamespace = "http://tunduk-sf.x-road.fi/producer")
        ArrayOfCancelPolicyInfo canceledPolicies,
        @WebParam(name = "RequestOrg", targetNamespace = "http://tunduk-sf.x-road.fi/producer")
        String requestOrg,
        @WebParam(name = "RequestPerson", targetNamespace = "http://tunduk-sf.x-road.fi/producer")
        String requestPerson,
        @WebParam(name = "State", targetNamespace = "http://tunduk-sf.x-road.fi/producer", mode = WebParam.Mode.OUT)
        Holder<UploadState> state,
        @WebParam(name = "Error", targetNamespace = "http://tunduk-sf.x-road.fi/producer", mode = WebParam.Mode.OUT)
        Holder<String> error,
        @WebParam(name = "Issuer", targetNamespace = "http://tunduk-sf.x-road.fi/producer", mode = WebParam.Mode.OUT)
        Holder<String> issuer,
        @WebParam(name = "Policies", targetNamespace = "http://tunduk-sf.x-road.fi/producer", mode = WebParam.Mode.OUT)
        Holder<ArrayOfPolicyInfo> policies,
        @WebParam(name = "client", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "client")
        Holder<XRoadClientIdentifierType> client,
        @WebParam(name = "id", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "id")
        Holder<String> id,
        @WebParam(name = "issue", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "issue")
        Holder<String> issue,
        @WebParam(name = "protocolVersion", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "protocolVersion")
        Holder<String> protocolVersion,
        @WebParam(name = "service", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "service")
        Holder<XRoadServiceIdentifierType> service,
        @WebParam(name = "userId", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "userId")
        Holder<String> userId);

    /**
     * 
     * @param requestPerson
     * @param requestOrg
     * @param policiesInfo0
     * @param issue
     * @param service
     * @param client
     * @param protocolVersion
     * @param id
     * @param policiesInfo
     * @param error
     * @param userId
     * @param issuer
     */
    @WebMethod(operationName = "CheckState", action = "http://tempuri.org/IPolicyReportService/CheckState")
    @RequestWrapper(localName = "CheckState", targetNamespace = "http://tunduk-sf.x-road.fi/producer", className = "fi.x_road.tunduk_sf.producer.CheckStateRequest")
    @ResponseWrapper(localName = "CheckStateResponse", targetNamespace = "http://tunduk-sf.x-road.fi/producer", className = "fi.x_road.tunduk_sf.producer.CheckStateResponse")
    public void checkState(
        @WebParam(name = "PoliciesInfo", targetNamespace = "http://tunduk-sf.x-road.fi/producer")
        ArrayOfCheckRequestInfo policiesInfo,
        @WebParam(name = "RequestOrg", targetNamespace = "http://tunduk-sf.x-road.fi/producer")
        String requestOrg,
        @WebParam(name = "RequestPerson", targetNamespace = "http://tunduk-sf.x-road.fi/producer")
        String requestPerson,
        @WebParam(name = "PoliciesInfo", targetNamespace = "http://tunduk-sf.x-road.fi/producer", mode = WebParam.Mode.OUT)
        Holder<ArrayOfCheckResponseInfo> policiesInfo0,
        @WebParam(name = "Error", targetNamespace = "http://tunduk-sf.x-road.fi/producer", mode = WebParam.Mode.OUT)
        Holder<String> error,
        @WebParam(name = "Issuer", targetNamespace = "http://tunduk-sf.x-road.fi/producer", mode = WebParam.Mode.OUT)
        Holder<String> issuer,
        @WebParam(name = "client", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "client")
        Holder<XRoadClientIdentifierType> client,
        @WebParam(name = "id", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "id")
        Holder<String> id,
        @WebParam(name = "issue", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "issue")
        Holder<String> issue,
        @WebParam(name = "protocolVersion", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "protocolVersion")
        Holder<String> protocolVersion,
        @WebParam(name = "service", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "service")
        Holder<XRoadServiceIdentifierType> service,
        @WebParam(name = "userId", targetNamespace = "http://x-road.eu/xsd/xroad.xsd", header = true, mode = WebParam.Mode.INOUT, partName = "userId")
        Holder<String> userId);

}
